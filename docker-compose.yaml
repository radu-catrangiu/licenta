version: "3.1"

services:
  frontend:
    build:
      context: ./frontend/get_together/
      dockerfile: Dockerfile
    container_name: frontend
    networks: 
      - net
    ports:
      - 80:80
    environment:
      NODE_ENV: "beta"

  mongo:
    image: mongo
    command: --smallfiles
    restart: always
    container_name: database
    ports:
      - 27017:27017
    networks: 
      net:
        aliases:
          - database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - db_persistence:/data/db
      - ./database/config/:/init
      - ./database/init/:/docker-entrypoint-initdb.d

  mongo-express:
    image: mongo-express
    restart: always
    container_name: database-interface
    networks: 
      - net
    ports:
      - 9001:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  broker:
    image: eclipse-mosquitto:latest
    container_name: announce-broker
    ports:
      - 1883:1883
    networks:
      net:
        aliases:
          - broker
  
  core-users:
    build:
      context: ./backend/core_users/
      dockerfile: Dockerfile
    container_name: core-users
    networks: 
      - net
    depends_on:
      - mongo
      - broker
    environment:
      MONGO_HOST: database
      MONGO_USER: root
      MONGO_PASS: example
      MQTT_BROKER: mqtt://broker/
      ANNOUNCE_INTERVAL: 5000
      INSIDER_URL: http://insider:8089

  core-locations:
    build:
      context: ./backend/core_locations/
      dockerfile: Dockerfile
    container_name: core-locations
    networks: 
      - net
    depends_on:
      - mongo
      - broker
    environment:
      MONGO_HOST: database
      MONGO_USER: root
      MONGO_PASS: example
      MQTT_BROKER: mqtt://broker/
      ANNOUNCE_INTERVAL: 5000
      INSIDER_URL: http://insider:8089

  core-groups:
    build:
      context: ./backend/core_groups/
      dockerfile: Dockerfile
    container_name: core-groups
    networks: 
      - net
    depends_on:
      - mongo
      - broker
    environment:
      MONGO_HOST: database
      MONGO_USER: root
      MONGO_PASS: example
      MQTT_BROKER: mqtt://broker/
      ANNOUNCE_INTERVAL: 5000
      INSIDER_URL: http://insider:8089

  core-tokens:
    build:
      context: ./backend/core_tokens/
      dockerfile: Dockerfile
    container_name: core-tokens
    networks: 
      - net
    depends_on:
      - mongo
      - broker
    environment:
      MONGO_HOST: database
      MONGO_USER: root
      MONGO_PASS: example
      MQTT_BROKER: mqtt://broker/
      ANNOUNCE_INTERVAL: 5000
      INSIDER_URL: http://insider:8089

  insider:
    build:
      context: ./backend/insider/
      dockerfile: Dockerfile
    container_name: insider
    networks:
      net:
        aliases:
          - insider
    ports:
      - 3333:8089
    depends_on:
      - broker
    environment:
      MQTT_BROKER: mqtt://broker/
      ANNOUNCE_INTERVAL: 300000

volumes:
  db_persistence:

networks: 
  net:
  